options:
  logging: CLOUD_LOGGING_ONLY
steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t' ,
        'us-central1-docker.pkg.dev/gcp-kubernetes-assignment/kubernetes-assignment/container1:latest',
        '-f',
        'Dockerfile',
        '.'
      ]

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/gcp-kubernetes-assignment/kubernetes-assignment/container1:latest']

  # Step 3: Deploy the application and service to GKE
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        PROJECT=$$(gcloud config get-value core/project)
        export USE_GKE_GCLOUD_AUTH_PLUGIN=true
        gcloud container clusters get-credentials gke-kubernetes --zone us-central1-c --project gcp-kubernetes-assignment
        kubectl apply -f container1-deployment.yaml

  # Step 4: Apply persistent volume and claim
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        PROJECT=$$(gcloud config get-value core/project)
        export USE_GKE_GCLOUD_AUTH_PLUGIN=true
        gcloud container clusters get-credentials gke-kubernetes --zone us-central1-c --project gcp-kubernetes-assignment
        kubectl apply -f pv-pvc.yaml

images:
  - 'us-central1-docker.pkg.dev/gcp-kubernetes-assignment/kubernetes-assignment/container1:latest'

